# Copyright (c) 2011 KUBO Atsuhiro <kubo@iteman.jp>,
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#     * Redistributions of source code must retain the above copyright notice,
#       this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

parameters:
  stagehand_testrunner.testing_framework: ~
  stagehand_testrunner.recursively_scans: false
  stagehand_testrunner.colors: false
  stagehand_testrunner.preload_file: null
  stagehand_testrunner.enables_autotest: false
  stagehand_testrunner.monitoring_directories: []
  stagehand_testrunner.uses_notification: false
  stagehand_testrunner.test_methods: []
  stagehand_testrunner.test_classes: []
  stagehand_testrunner.junit_xml_file: null
  stagehand_testrunner.logs_results_in_junit_xml_in_realtime: false
  stagehand_testrunner.stops_on_failure: false
  stagehand_testrunner.test_file_pattern: ~
  stagehand_testrunner.test_resources: []

services:
  stagehand_testrunner.component_aware_factory_factory:
    class: Stagehand\TestRunner\Core\ComponentAwareFactoryFactory
  stagehand_testrunner.plugin:
    class: Stagehand\TestRunner\Core\Plugin\Plugin
    factory_class: Stagehand\TestRunner\Core\Plugin\PluginFinder
    factory_method: findByPluginID
    arguments: [ "%stagehand_testrunner.testing_framework%" ]
  stagehand_testrunner.plugin_aware_factory_factory:
    class: Stagehand\TestRunner\Core\Plugin\PluginAwareFactoryFactory
    arguments: [ "@stagehand_testrunner.plugin" ]
  stagehand_testrunner.testing_framework:
    class: Stagehand\TestRunner\Core\TestingFramework
    arguments: [ "%stagehand_testrunner.testing_framework%" ]
  stagehand_testrunner.legacy_proxy:
    class: Stagehand\TestRunner\Core\LegacyProxy
  stagehand_testrunner.output_buffering:
    class: Stagehand\TestRunner\Util\OutputBuffering
    calls:
      - [ setLegacyProxy, [ "@stagehand_testrunner.legacy_proxy" ] ]
  stagehand_testrunner.test_runner:
    class: Stagehand\TestRunner\CLI\TestRunner
    calls:
      - [ setEnablesAutotest, [ "%stagehand_testrunner.enables_autotest%" ] ]
      - [ setTestRunFactory, [ "@stagehand_testrunner.test_run_factory" ] ]
  stagehand_testrunner.test_run:
    class: Stagehand\TestRunner\Process\TestRun
    calls:
      - [ setOutputBuffering, [ "@stagehand_testrunner.output_buffering" ] ]
      - [ setCollectorFactory, [ "@stagehand_testrunner.collector_factory" ] ]
      - [ setPreparerFactory, [ "@stagehand_testrunner.preparer_factory" ] ]
      - [ setRunnerFactory, [ "@stagehand_testrunner.runner_factory" ] ]
      - [ setNotifierFactory, [ "@stagehand_testrunner.notifier_factory" ] ]
  stagehand_testrunner.test_run_factory:
    class: Stagehand\TestRunner\Process\TestRun
    factory_service: stagehand_testrunner.component_aware_factory_factory
    factory_method: create
    arguments: [ "test_run" ]
  stagehand_testrunner.autotest:
    abstract: true
    calls:
      - [ setPreloadFile, [ "%stagehand_testrunner.preload_file%" ] ]
      - [ setTerminal, [ "@stagehand_testrunner.terminal" ] ]
      - [ setTestTargets, [ "@stagehand_testrunner.test_targets" ] ]
      - [ setMonitoringDirectories, [ "%stagehand_testrunner.monitoring_directories%" ] ]
      - [ setLegacyProxy, [ "@stagehand_testrunner.legacy_proxy" ] ]
      - [ setAlterationMonitoring, [ "@stagehand_testrunner.alteration_monitoring" ] ]
      - [ setPreparerFactory, [ "@stagehand_testrunner.preparer_factory" ] ]
      - [ setRunnerFactory, [ "@stagehand_testrunner.runner_factory" ] ]
      - [ setNotifierFactory, [ "@stagehand_testrunner.notifier_factory" ] ]
  stagehand_testrunner.autotest_factory:
    class: Stagehand\TestRunner\Process\Autotest\Autotest
    factory_service: stagehand_testrunner.plugin_aware_factory_factory
    factory_method: create
    arguments: [ "autotest" ]
  stagehand_testrunner.alteration_monitoring:
    class: Stagehand\TestRunner\Process\AlterationMonitoring
  stagehand_testrunner.terminal:
    class: Stagehand\TestRunner\CLI\Terminal
    calls:
      - [ setColors, [ "%stagehand_testrunner.colors%" ] ]
  stagehand_testrunner.test_targets:
    class: Stagehand\TestRunner\Core\TestTargets
    calls:
      - [ setResources, [ "%stagehand_testrunner.test_resources%" ] ]
      - [ setMethods, [ "%stagehand_testrunner.test_methods%" ] ]
      - [ setClasses, [ "%stagehand_testrunner.test_classes%" ] ]
      - [ setFilePattern, [ "%stagehand_testrunner.test_file_pattern%" ] ]
      - [ setRecursivelyScans, [ "%stagehand_testrunner.recursively_scans%" ] ]
  stagehand_testrunner.preparer:
    abstract: true
  stagehand_testrunner.preparer_factory:
    class: Stagehand\TestRunner\Preparer\Preparer
    factory_service: stagehand_testrunner.plugin_aware_factory_factory
    factory_method: create
    arguments: [ "preparer" ]
  stagehand_testrunner.collector:
    abstract: true
    arguments: [ "@stagehand_testrunner.test_targets" ]
    calls:
      - [ setCollectingTypeFactory, [ "@stagehand_testrunner.collecting_type_factory" ] ]
  stagehand_testrunner.collector_factory:
    class: Stagehand\TestRunner\Collector\Collector
    factory_service: stagehand_testrunner.plugin_aware_factory_factory
    factory_method: create
    arguments: [ "collector" ]
  stagehand_testrunner.collecting_type:
    scope: prototype
    class: Stagehand\TestRunner\Collector\CollectingType
    calls:
      - [ setLegacyProxy, [ "@stagehand_testrunner.legacy_proxy" ] ]
  stagehand_testrunner.collecting_type_factory:
    class: Stagehand\TestRunner\Collector\CollectingType
    factory_service: stagehand_testrunner.component_aware_factory_factory
    factory_method: create
    arguments: [ "collecting_type", "\\Stagehand\\TestRunner\\Collector\\CollectingTypeFactory" ]
  stagehand_testrunner.runner:
    abstract: true
    calls:
      - [ setTerminal, [ "@stagehand_testrunner.terminal" ] ]
      - [ setJUnitXMLFile, [ "%stagehand_testrunner.junit_xml_file%" ] ]
      - [ setStopsOnFailure, [ "%stagehand_testrunner.stops_on_failure%" ] ]
      - [ setUsesNotification, [ "%stagehand_testrunner.uses_notification%" ] ]
      - [ setTestTargets, [ "@stagehand_testrunner.test_targets" ] ]
  stagehand_testrunner.runner_factory:
    class: Stagehand\TestRunner\Runner\Runner
    factory_service: stagehand_testrunner.plugin_aware_factory_factory
    factory_method: create
    arguments: [ "runner" ]
  stagehand_testrunner.notifier:
    class: Stagehand\TestRunner\Notification\Notifier
    calls:
      - [ setLegacyProxy, [ "@stagehand_testrunner.legacy_proxy" ] ]
  stagehand_testrunner.notifier_factory:
    class: Stagehand\TestRunner\Notification\Notifier
    factory_service: stagehand_testrunner.component_aware_factory_factory
    factory_method: create
    arguments: [ "notifier" ]
  stagehand_testrunner.junit_xml_dom_writer:
    scope: prototype
    class: Stagehand\TestRunner\JUnitXMLWriter\JUnitXMLDOMWriter
  stagehand_testrunner.junit_xml_dom_writer_factory:
    class: Stagehand\TestRunner\JUnitXMLWriter\JUnitXMLDOMWriter
    factory_service: stagehand_testrunner.component_aware_factory_factory
    factory_method: create
    arguments: [ "junit_xml_dom_writer" ]
  stagehand_testrunner.junit_xml_stream_writer:
    scope: prototype
    class: Stagehand\TestRunner\JUnitXMLWriter\JUnitXMLStreamWriter
  stagehand_testrunner.junit_xml_stream_writer_factory:
    class: Stagehand\TestRunner\JUnitXMLWriter\JUnitXMLStreamWriter
    factory_service: stagehand_testrunner.component_aware_factory_factory
    factory_method: create
    arguments: [ "junit_xml_stream_writer" ]
  stagehand_testrunner.junit_xml_writer_factory:
    class: Stagehand\TestRunner\JUnitXMLWriter\JUnitXMLWriterFactory
    calls:
      - [ setLogsResultsInRealtime, [ "%stagehand_testrunner.logs_results_in_junit_xml_in_realtime%" ] ]
      - [ setJUnitXMLDOMWriterFactory, [ "@stagehand_testrunner.junit_xml_dom_writer_factory" ] ]
      - [ setJUnitXMLStreamWriterFactory, [ "@stagehand_testrunner.junit_xml_stream_writer_factory" ] ]

# Local Variables:
# mode: conf
# coding: iso-8859-1
# tab-width: 2
# c-basic-offset: 2
# c-hanging-comment-ender-p: nil
# indent-tabs-mode: nil
# End:
