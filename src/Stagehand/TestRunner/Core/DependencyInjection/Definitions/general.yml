# Copyright (c) 2011-2012 KUBO Atsuhiro <kubo@iteman.jp>,
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#     * Redistributions of source code must retain the above copyright notice,
#       this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

parameters:
  recursively_scans: false
  enables_autotest: false
  monitoring_directories: []
  uses_notification: false
  test_methods: []
  test_classes: []
  junit_xml_file: null
  logs_results_in_junit_xml_in_realtime: false
  stops_on_failure: false
  test_file_pattern: ~
  test_resources: []
  prints_detailed_progress_report: false
  component_aware_factory_factory.class: "Stagehand\\TestRunner\\Core\\ComponentAwareFactoryFactory"
  plugin_aware_factory.class: "Stagehand\\TestRunner\\Core\\Plugin\\PluginAwareFactory"

services:
  legacy_proxy:
    class: Stagehand\TestRunner\Core\LegacyProxy
  output_buffering:
    class: Stagehand\TestRunner\Util\OutputBuffering
    calls:
      - [ setLegacyProxy, [ "@legacy_proxy" ] ]
  test_runner:
    class: Stagehand\TestRunner\CLI\TestRunner
    calls:
      - [ setEnablesAutotest, [ "%enables_autotest%" ] ]
      - [ setTestRunFactory, [ "@test_run_factory" ] ]
      - [ setAutotestFactory, [ "@autotest_factory" ] ]
  test_run:
    class: Stagehand\TestRunner\Process\TestRun
    calls:
      - [ setOutputBuffering, [ "@output_buffering" ] ]
      - [ setCollectorFactory, [ "@collector_factory" ] ]
      - [ setPreparerFactory, [ "@preparer_factory" ] ]
      - [ setRunnerFactory, [ "@runner_factory" ] ]
      - [ setNotifierFactory, [ "@notifier_factory" ] ]
  test_run_factory:
    class: Stagehand\TestRunner\Process\TestRun
    factory_class: "%component_aware_factory_factory.class%"
    factory_method: create
    arguments: [ "test_run" ]
  autotest:
    abstract: true
    calls:
      - [ setTerminal, [ "@terminal" ] ]
      - [ setTestTargets, [ "@test_targets" ] ]
      - [ setMonitoringDirectories, [ "%monitoring_directories%" ] ]
      - [ setLegacyProxy, [ "@legacy_proxy" ] ]
      - [ setAlterationMonitoring, [ "@alteration_monitoring" ] ]
      - [ setPreparerFactory, [ "@preparer_factory" ] ]
      - [ setRunnerFactory, [ "@runner_factory" ] ]
      - [ setNotifierFactory, [ "@notifier_factory" ] ]
  autotest_factory:
    class: Stagehand\TestRunner\Process\Autotest\Autotest
    factory_class: "%component_aware_factory_factory.class%"
    factory_method: create
    arguments: [ "autotest", "%plugin_aware_factory.class%" ]
  alteration_monitoring:
    class: Stagehand\TestRunner\Process\AlterationMonitoring
  input:
    synthetic: true
  output:
    synthetic: true
  terminal:
    class: Stagehand\TestRunner\CLI\Terminal
    calls:
      - [ setInput, [ "@input" ] ]
      - [ setOutput, [ "@output" ] ]
  test_targets:
    class: Stagehand\TestRunner\Core\TestTargets
    calls:
      - [ setResources, [ "%test_resources%" ] ]
      - [ setMethods, [ "%test_methods%" ] ]
      - [ setClasses, [ "%test_classes%" ] ]
      - [ setFilePattern, [ "%test_file_pattern%" ] ]
      - [ setRecursivelyScans, [ "%recursively_scans%" ] ]
  preparer:
    abstract: true
  preparer_factory:
    class: Stagehand\TestRunner\Preparer\Preparer
    factory_class: "%component_aware_factory_factory.class%"
    factory_method: create
    arguments: [ "preparer", "%plugin_aware_factory.class%" ]
  collector:
    abstract: true
    arguments: [ "@test_targets" ]
    calls:
      - [ setCollectingTypeFactory, [ "@collecting_type_factory" ] ]
  collector_factory:
    class: Stagehand\TestRunner\Collector\Collector
    factory_class: "%component_aware_factory_factory.class%"
    factory_method: create
    arguments: [ "collector", "%plugin_aware_factory.class%" ]
  collecting_type:
    scope: prototype
    class: Stagehand\TestRunner\Collector\CollectingType
    calls:
      - [ setLegacyProxy, [ "@legacy_proxy" ] ]
  collecting_type_factory:
    class: Stagehand\TestRunner\Collector\CollectingType
    factory_class: "%component_aware_factory_factory.class%"
    factory_method: create
    arguments: [ "collecting_type", "\\Stagehand\\TestRunner\\Collector\\CollectingTypeFactory" ]
  runner:
    abstract: true
    calls:
      - [ setTerminal, [ "@terminal" ] ]
      - [ setJUnitXMLFile, [ "%junit_xml_file%" ] ]
      - [ setStopsOnFailure, [ "%stops_on_failure%" ] ]
      - [ setUsesNotification, [ "%uses_notification%" ] ]
      - [ setTestTargets, [ "@test_targets" ] ]
      - [ setPrintsDetailedProgressReport, [ "%prints_detailed_progress_report%" ] ]
  runner_factory:
    class: Stagehand\TestRunner\Runner\Runner
    factory_class: "%component_aware_factory_factory.class%"
    factory_method: create
    arguments: [ "runner", "%plugin_aware_factory.class%" ]
  notifier:
    class: Stagehand\TestRunner\Notification\Notifier
    calls:
      - [ setLegacyProxy, [ "@legacy_proxy" ] ]
  notifier_factory:
    class: Stagehand\TestRunner\Notification\Notifier
    factory_class: "%component_aware_factory_factory.class%"
    factory_method: create
    arguments: [ "notifier" ]
  junit_xml_dom_writer:
    scope: prototype
    class: Stagehand\TestRunner\JUnitXMLWriter\JUnitXMLDOMWriter
  junit_xml_dom_writer_factory:
    class: Stagehand\TestRunner\JUnitXMLWriter\JUnitXMLDOMWriter
    factory_class: "%component_aware_factory_factory.class%"
    factory_method: create
    arguments: [ "junit_xml_dom_writer" ]
  junit_xml_stream_writer:
    scope: prototype
    class: Stagehand\TestRunner\JUnitXMLWriter\JUnitXMLStreamWriter
  junit_xml_stream_writer_factory:
    class: Stagehand\TestRunner\JUnitXMLWriter\JUnitXMLStreamWriter
    factory_class: "%component_aware_factory_factory.class%"
    factory_method: create
    arguments: [ "junit_xml_stream_writer" ]
  junit_xml_writer_factory:
    class: Stagehand\TestRunner\JUnitXMLWriter\JUnitXMLWriterFactory
    calls:
      - [ setLogsResultsInRealtime, [ "%logs_results_in_junit_xml_in_realtime%" ] ]
      - [ setJUnitXMLDOMWriterFactory, [ "@junit_xml_dom_writer_factory" ] ]
      - [ setJUnitXMLStreamWriterFactory, [ "@junit_xml_stream_writer_factory" ] ]

# Local Variables:
# mode: conf
# coding: iso-8859-1
# tab-width: 2
# c-basic-offset: 2
# c-hanging-comment-ender-p: nil
# indent-tabs-mode: nil
# End:
